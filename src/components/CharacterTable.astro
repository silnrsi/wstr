---
import { getCharacterName, ERROR_INVALID_USV } from '../utils/coredata_access';

const { startUsv, endUsv, caption } = Astro.props;

const start = parseInt(startUsv, 16);
const end = parseInt(endUsv, 16);

const rows = [];
for (let usvInt = start; usvInt <= end; usvInt++) {
  const usv = usvInt.toString(16).toUpperCase().padStart(4, '0');
  const characterName = await getCharacterName(usv);
  const character = characterName !== ERROR_INVALID_USV ? String.fromCodePoint(usvInt) : '';
  rows.push({ usv, character, characterName });
}
---
<div>
  <table>
    <thead>
      <tr>
        <th>USV</th>
        <th>Char</th>
        <th>Unicode Character Name</th>
      </tr>
    </thead>
    <tbody>
      {rows.map(row => (
        <tr>
          <td class="uni-char-metadata">U+{row.usv}</td>
          <td>{row.character}</td>
          <td class="uni-char-metadata">{row.characterName}</td>
        </tr>
      ))}
    </tbody>
  </table>
  {caption && <div class="table-caption">{caption}</div>}
</div>