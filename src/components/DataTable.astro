---
import { db, sql } from 'astro:db';
const { table, filter, order, caption } = Astro.props

// Ensure `fields` is explicitly typed as a string
const fields = (Astro.props.fields as string).split(',').map((pair: string) => {
  const [field, title] = pair.split('=').map(str => str.trim());
  return { field, title: title || field }; // Use the field name as the title if no custom title is provided
});

// Extract the field names for the SQL query
const selected = Object.fromEntries(fields.map(({field}) => [field, sql.raw(field)]));
const rows = await db
  .select(selected)
  .from(sql.raw(table))
  .where(sql.raw(filter))
  .orderBy(sql.raw(order));
---

<style>
  .record-count {
    margin-top: 0.5em;
    font-size: 0.9em;
    font-style: italic;
  }
  .caption {
    font-size: 0.8em;
    font-style: italic;
    text-align: left;
  }
</style>

<div>
  <table>
    <thead>
      <tr>
        {fields.map(({ title }) => (
          <th>{title}</th>
        ))}
      </tr>
    </thead>
    <tbody>
      {rows.map(row => (
        <tr>
          {fields.map(({ field }) => (
            <td>{row[field]}</td>
          ))}
        </tr>
      ))}
    </tbody>
  </table>
  {caption && <div class="caption">{caption}</div>}
  <!-- <div class="record-count">Total records: {rows.length}</div> -->
</div>